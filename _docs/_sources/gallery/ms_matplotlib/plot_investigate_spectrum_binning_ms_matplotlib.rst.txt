
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/ms_matplotlib/plot_investigate_spectrum_binning_ms_matplotlib.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_ms_matplotlib_plot_investigate_spectrum_binning_ms_matplotlib.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_ms_matplotlib_plot_investigate_spectrum_binning_ms_matplotlib.py:


Investigate Spctrum Binning ms_matplotlib
=======================================

Here we use a dummy spectrum example to investigate spectrum binning. 

.. GENERATED FROM PYTHON SOURCE LINES 7-85



.. image-sg:: /gallery/ms_matplotlib/images/sphx_glr_plot_investigate_spectrum_binning_ms_matplotlib_001.png
   :alt: Spectrum (Raw), Spectrum (agg: sum | bin: freedman), Spectrum (agg: mean | bin: freedman), Spectrum (agg: sum | bin: mz-tol-bin=1), Spectrum (agg: mean | bin: mz-tol-bin=1), Spectrum (agg: max | bin: mz-tol-bin=1), Spectrum (agg: max | bin: mz-tol-bin=1pct-diff), Spectrum (agg: max | bin: mz-tol-bin=freedman-diaconis)
   :srcset: /gallery/ms_matplotlib/images/sphx_glr_plot_investigate_spectrum_binning_ms_matplotlib_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    import pandas as pd
    import matplotlib.pyplot as plt
    from pyopenms_viz import TEST_DATA_PATH

    pd.options.plotting.backend = "ms_matplotlib"

    # load the test file for example plotting
    data = TEST_DATA_PATH() / "TestSpectrumDf.tsv"
    df = pd.read_csv(data, sep="\t")

    # Let's assess the peak binning and create a 4 by 2 subplot to visualize the different methods of binning
    params_list = [
        {"title": "Spectrum (Raw)", "bin_peaks": False},
        {
            "title": "Spectrum (agg: sum | bin: freedman)",
            "bin_peaks": "auto",
            "bin_method": "freedman-diaconis",
            "aggregation_method": "sum",
        },
        {
            "title": "Spectrum (agg: mean | bin: freedman)",
            "bin_peaks": "auto",
            "bin_method": "freedman-diaconis",
            "aggregation_method": "mean",
        },
        {
            "title": "Spectrum (agg: sum | bin: mz-tol-bin=1)",
            "bin_peaks": "auto",
            "bin_method": "mz-tol-bin",
            "mz_tol": 1,
            "aggregation_method": "sum",
        },
        {
            "title": "Spectrum (agg: mean | bin: mz-tol-bin=1)",
            "bin_peaks": "auto",
            "bin_method": "mz-tol-bin",
            "mz_tol": 1,
            "aggregation_method": "mean",
        },
        {
            "title": "Spectrum (agg: max | bin: mz-tol-bin=1)",
            "bin_peaks": "auto",
            "bin_method": "mz-tol-bin",
            "mz_tol": 1,
            "aggregation_method": "max",
        },
        {
            "title": "Spectrum (agg: max | bin: mz-tol-bin=1pct-diff)",
            "bin_peaks": "auto",
            "bin_method": "mz-tol-bin",
            "mz_tol": "1pct-diff",
            "aggregation_method": "max",
        },
        {
            "title": "Spectrum (agg: max | bin: mz-tol-bin=freedman-diaconis)",
            "bin_peaks": "auto",
            "bin_method": "mz-tol-bin",
            "mz_tol": "freedman-diaconis",
            "aggregation_method": "max",
        },
    ]

    # Create a 3-row subplot
    fig, axs = plt.subplots(4, 2, figsize=(14, 14))

    i = j = 0
    for params in params_list:
        p = df.plot(
            kind="spectrum", x="mz", y="intensity", fig=axs[i][j], grid=False, **params
        )
        j += 1
        if j >= 2:  # If we've filled two columns, move to the next row
            j = 0
            i += 1

    fig.tight_layout()
    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.758 seconds)


.. _sphx_glr_download_gallery_ms_matplotlib_plot_investigate_spectrum_binning_ms_matplotlib.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/OpenMS/pyopenms_viz/main?filepath=notebooks/gallery/ms_matplotlib/plot_investigate_spectrum_binning_ms_matplotlib.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_investigate_spectrum_binning_ms_matplotlib.ipynb <plot_investigate_spectrum_binning_ms_matplotlib.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_investigate_spectrum_binning_ms_matplotlib.py <plot_investigate_spectrum_binning_ms_matplotlib.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_investigate_spectrum_binning_ms_matplotlib.zip <plot_investigate_spectrum_binning_ms_matplotlib.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
